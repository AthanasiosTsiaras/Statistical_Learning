hist3 <- ggplot(dat, aes(EDU)) +
geom_histogram(bins = 10, fill = "darkblue", col = "lightblue") +
ggtitle("Histogram of Education") +
labs(x = "Education", y = "Frequency")
hist4 <- ggplot(dat, aes(EMPLOY)) +
geom_histogram(bins = 10, fill = "darkblue", col = "lightblue") +
ggtitle("Histogram of Employment") +
labs(x = "Employment", y = "Frequency")
hist5 <- ggplot(dat, aes(ASSETS)) +
geom_histogram(bins = 5, fill = "darkblue", col = "lightblue") +
ggtitle("Histogram of Assets") +
labs(x = "Assets", y = "Frequency")
hist6 <- ggplot(dat, aes(AGE)) +
geom_histogram(bins = 7, fill = "darkblue", col = "lightblue") +
ggtitle("Histogram of Age") +
labs(x = "Age", y = "Frequency")
grid.arrange(hist1, hist2, hist3, hist4, hist5, hist6, ncol = 3)
# Experience, Education and Employment variable transformation
hist22 <- ggplot(dat, aes(log(EXP))) +
geom_histogram(bins = 6, fill = "darkblue", col = "lightblue") +
ggtitle("Histogram of log(Experience)") +
labs(x = "Experience", y = "Frequency")
hist33 <- ggplot(dat, aes(log(EDU))) +
geom_histogram(bins = 7, fill = "darkblue", col = "lightblue") +
ggtitle("Histogram of log(Education)") +
labs(x = "Education", y = "Frequency")
hist44 <- ggplot(dat, aes(log(EMPLOY))) +
geom_histogram(bins = 7, fill = "darkblue", col = "lightblue") +
ggtitle("Histogram of log(Employment)") +
labs(x = "Employment", y = "Frequency")
grid.arrange(hist22, hist33, hist44, ncol = 3)
grid.arrange(hist1, hist22, hist33, hist44, hist5, hist6, ncol = 3)
# Outliers Detection
box1 <- ggplot(dat, aes(SALARY, group = 1)) +
geom_boxplot(aes(y=SALARY), fill = "darkblue", col = "lightblue", outlier.colour = "purple") +
ggtitle("Boxplot of Salary") +
labs(x= "", y = "")
box2 <- ggplot(dat, aes(EXP, group = 1)) +
geom_boxplot(aes(y=EXP), fill = "darkblue", col = "lightblue", outlier.colour = "purple") +
ggtitle("Boxplot of Experience") +
labs(x= "", y = "")
box3 <- ggplot(dat, aes(EDU, group = 1)) +
geom_boxplot(aes(y=EDU), fill = "darkblue", col = "lightblue", outlier.colour = "purple") +
ggtitle("Boxplot of Education") +
labs(x= "", y = "")
box4 <- ggplot(dat, aes(EMPLOY, group = 1)) +
geom_boxplot(aes(y=EMPLOY), fill = "darkblue", col = "lightblue", outlier.colour = "purple") +
ggtitle("Boxplot of Employment") +
labs(x= "", y = "")
box5 <- ggplot(dat, aes(ASSETS, group = 1)) +
geom_boxplot(aes(y=ASSETS), fill = "darkblue", col = "lightblue", outlier.colour = "purple") +
ggtitle("Boxplot of Assets") +
labs(x= "", y = "")
box6 <- ggplot(dat, aes(AGE, group = 1)) +
geom_boxplot(aes(y=AGE), fill = "darkblue", col = "lightblue", outlier.colour = "purple") +
ggtitle("Boxplot of Age") +
labs(x= "", y = "")
grid.arrange(box1, box2, box3, box4, box5, box6, ncol = 3)
boxsalbonus <- ggplot(dat, aes(group = BONUS)) +
geom_boxplot(aes(y = SALARY, x = BONUS), fill = "darkblue", col = "lightblue", outlier.color = "purple") +
ggtitle('Salary Distribution by Bonus')
boxsalbonus
setwd("~/Desktop/My_Applications/Guide to Statistical Modeling using R")
# Installing required libraries
library(ggplot2) # Visualization package - built according to Edward Tufte's guidelines
library(gridExtra) # Required to attach plots together
options(digits=4)
# Loading data
dat <- read.csv('./data/Clean_Salaries.csv', header = TRUE)
# Getting an overview of the data
dim(dat) # Size: Rows, Columns
str(dat) # column names, variable types
head(dat) # View first 6 rows of the data
tail(dat) # View the last 6 rows of the data
# Examining the distribution of the quantitative variables
hist1 <- ggplot(dat, aes(Salary)) +
geom_histogram(bins = 15, fill = "darkblue", col = "lightblue") +
ggtitle("Histogram of Salary") +
labs(x = "Salary", y = "Frequency")
hist2 <- ggplot(dat, aes(Experience)) +
geom_histogram(bins = 10, fill = "darkblue", col = "lightblue") +
ggtitle("Histogram of Experience") +
labs(x = "Experience", y = "Frequency")
hist3 <- ggplot(dat, aes(Education)) +
geom_histogram(bins = 10, fill = "darkblue", col = "lightblue") +
ggtitle("Histogram of Education") +
labs(x = "Education", y = "Frequency")
hist4 <- ggplot(dat, aes(Employment)) +
geom_histogram(bins = 10, fill = "darkblue", col = "lightblue") +
ggtitle("Histogram of Employment") +
labs(x = "Employment", y = "Frequency")
hist5 <- ggplot(dat, aes(Assets)) +
geom_histogram(bins = 5, fill = "darkblue", col = "lightblue") +
ggtitle("Histogram of Assets") +
labs(x = "Assets", y = "Frequency")
hist6 <- ggplot(dat, aes(Age)) +
geom_histogram(bins = 7, fill = "darkblue", col = "lightblue") +
ggtitle("Histogram of Age") +
labs(x = "Age", y = "Frequency")
grid.arrange(hist1, hist2, hist3, hist4, hist5, hist6, ncol = 3)
# Experience, Education and Employment variable transformation
hist22 <- ggplot(dat, aes(log(Experience))) +
geom_histogram(bins = 6, fill = "darkblue", col = "lightblue") +
ggtitle("Histogram of log(Experience)") +
labs(x = "Experience", y = "Frequency")
hist33 <- ggplot(dat, aes(log(Education))) +
geom_histogram(bins = 7, fill = "darkblue", col = "lightblue") +
ggtitle("Histogram of log(Education)") +
labs(x = "Education", y = "Frequency")
hist44 <- ggplot(dat, aes(log(Employment))) +
geom_histogram(bins = 7, fill = "darkblue", col = "lightblue") +
ggtitle("Histogram of log(Employment)") +
labs(x = "Employment", y = "Frequency")
grid.arrange(hist22, hist33, hist44, ncol = 3)
grid.arrange(hist1, hist22, hist33, hist44, hist5, hist6, ncol = 3)
# Outliers Detection
box1 <- ggplot(dat, aes(Salary, group = 1)) +
geom_boxplot(aes(y=Salary), fill = "darkblue", col = "lightblue", outlier.colour = "purple") +
ggtitle("Boxplot of Salary") +
labs(x= "", y = "")
box2 <- ggplot(dat, aes(Experience, group = 1)) +
geom_boxplot(aes(y=Experience), fill = "darkblue", col = "lightblue", outlier.colour = "purple") +
ggtitle("Boxplot of Experience") +
labs(x= "", y = "")
box3 <- ggplot(dat, aes(Education, group = 1)) +
geom_boxplot(aes(y=Education), fill = "darkblue", col = "lightblue", outlier.colour = "purple") +
ggtitle("Boxplot of Education") +
labs(x= "", y = "")
box4 <- ggplot(dat, aes(Employment, group = 1)) +
geom_boxplot(aes(y=Employment), fill = "darkblue", col = "lightblue", outlier.colour = "purple") +
ggtitle("Boxplot of Employment") +
labs(x= "", y = "")
box5 <- ggplot(dat, aes(Assets, group = 1)) +
geom_boxplot(aes(y=Assets), fill = "darkblue", col = "lightblue", outlier.colour = "purple") +
ggtitle("Boxplot of Assets") +
labs(x= "", y = "")
box6 <- ggplot(dat, aes(Age, group = 1)) +
geom_boxplot(aes(y=Age), fill = "darkblue", col = "lightblue", outlier.colour = "purple") +
ggtitle("Boxplot of Age") +
labs(x= "", y = "")
grid.arrange(box1, box2, box3, box4, box5, box6, ncol = 3)
boxsalbonus <- ggplot(dat, aes(group = Bonus)) +
geom_boxplot(aes(y = Salary, x = Bonus), fill = "darkblue", col = "lightblue", outlier.color = "purple") +
ggtitle('Salary Distribution by Bonus')
boxsalbonus
boxintern <- ggplot(dat, aes(group = International)) +
geom_boxplot(aes(y = Salary, x = International), fill = "darkblue", col = "lightblue", outlier.color = "purple") +
ggtitle('Salary Distribution by International')
boxintern
grid.arrange(boxintern, boxsalbonus, ncol = 2)
setwd("~/Desktop/My_Applications/Guide to Statistical Modeling using R")
# Installing required libraries
library(ggplot2) # Visualization package - built according to Edward Tufte's guidelines
library(gridExtra) # Required to attach plots together
options(digits=4)
# Loading data
dat <- read.csv('./data/Clean_Salaries.csv', header = TRUE)
# Getting an overview of the data
dim(dat) # Size: Rows, Columns
str(dat) # column names, variable types
head(dat) # View first 6 rows of the data
tail(dat) # View the last 6 rows of the data
# Examining the distribution of the quantitative variables
hist1 <- ggplot(dat, aes(Salary)) +
geom_histogram(bins = 15, fill = "darkblue", col = "lightblue") +
ggtitle("Histogram of Salary") +
labs(x = "Salary", y = "Frequency")
hist2 <- ggplot(dat, aes(Experience)) +
geom_histogram(bins = 10, fill = "darkblue", col = "lightblue") +
ggtitle("Histogram of Experience") +
labs(x = "Experience", y = "Frequency")
hist3 <- ggplot(dat, aes(Education)) +
geom_histogram(bins = 10, fill = "darkblue", col = "lightblue") +
ggtitle("Histogram of Education") +
labs(x = "Education", y = "Frequency")
hist4 <- ggplot(dat, aes(Employment)) +
geom_histogram(bins = 10, fill = "darkblue", col = "lightblue") +
ggtitle("Histogram of Employment") +
labs(x = "Employment", y = "Frequency")
hist5 <- ggplot(dat, aes(Assets)) +
geom_histogram(bins = 5, fill = "darkblue", col = "lightblue") +
ggtitle("Histogram of Assets") +
labs(x = "Assets", y = "Frequency")
hist6 <- ggplot(dat, aes(Age)) +
geom_histogram(bins = 7, fill = "darkblue", col = "lightblue") +
ggtitle("Histogram of Age") +
labs(x = "Age", y = "Frequency")
grid.arrange(hist1, hist2, hist3, hist4, hist5, hist6, ncol = 3)
# Experience, Education and Employment variable transformation
hist22 <- ggplot(dat, aes(log(Experience))) +
geom_histogram(bins = 6, fill = "darkblue", col = "lightblue") +
ggtitle("Histogram of log(Experience)") +
labs(x = "Experience", y = "Frequency")
hist33 <- ggplot(dat, aes(log(Education))) +
geom_histogram(bins = 7, fill = "darkblue", col = "lightblue") +
ggtitle("Histogram of log(Education)") +
labs(x = "Education", y = "Frequency")
hist44 <- ggplot(dat, aes(log(Employment))) +
geom_histogram(bins = 7, fill = "darkblue", col = "lightblue") +
ggtitle("Histogram of log(Employment)") +
labs(x = "Employment", y = "Frequency")
grid.arrange(hist22, hist33, hist44, ncol = 3)
grid.arrange(hist1, hist22, hist33, hist44, hist5, hist6, ncol = 3)
# Outliers Detection
box1 <- ggplot(dat, aes(Salary, group = 1)) +
geom_boxplot(aes(y=Salary), fill = "darkblue", col = "lightblue", outlier.colour = "purple") +
ggtitle("Boxplot of Salary") +
labs(x= "", y = "")
box2 <- ggplot(dat, aes(Experience, group = 1)) +
geom_boxplot(aes(y=Experience), fill = "darkblue", col = "lightblue", outlier.colour = "purple") +
ggtitle("Boxplot of Experience") +
labs(x= "", y = "")
box3 <- ggplot(dat, aes(Education, group = 1)) +
geom_boxplot(aes(y=Education), fill = "darkblue", col = "lightblue", outlier.colour = "purple") +
ggtitle("Boxplot of Education") +
labs(x= "", y = "")
box4 <- ggplot(dat, aes(Employment, group = 1)) +
geom_boxplot(aes(y=Employment), fill = "darkblue", col = "lightblue", outlier.colour = "purple") +
ggtitle("Boxplot of Employment") +
labs(x= "", y = "")
box5 <- ggplot(dat, aes(Assets, group = 1)) +
geom_boxplot(aes(y=Assets), fill = "darkblue", col = "lightblue", outlier.colour = "purple") +
ggtitle("Boxplot of Assets") +
labs(x= "", y = "")
box6 <- ggplot(dat, aes(Age, group = 1)) +
geom_boxplot(aes(y=Age), fill = "darkblue", col = "lightblue", outlier.colour = "purple") +
ggtitle("Boxplot of Age") +
labs(x= "", y = "")
grid.arrange(box1, box2, box3, box4, box5, box6, ncol = 3)
boxintern <- ggplot(dat, aes(group = International)) +
geom_boxplot(aes(y = Salary, x = International), fill = "darkblue", col = "lightblue", outlier.color = "purple") +
ggtitle('Salary Distribution by International')
boxsalbonus <- ggplot(dat, aes(group = Bonus)) +
geom_boxplot(aes(y = Salary, x = Bonus), fill = "darkblue", col = "lightblue", outlier.color = "purple") +
ggtitle('Salary Distribution by Bonus')
grid.arrange(boxintern, boxsalbonus, ncol = 2)
str(dat) # column names, variable types
QuantVar <- dat[, ['id']]
QuantVar <- dat[, c('id')]
QuantVar <- dat[, c('Salary', 'Experience', 'Education', 'Employment', 'Assets', 'Age')]
cor(round(QuantVar),2)
cor(round(QuantVar,2))
cormatr1 <- cor(round(QuantVar,2))
cormatr1[upper.tri(cormatr1)]<-""
cormatr1<-as.data.frame(cormatr1)
cormatr1
cormatr1 <- cor(round(QuantVar,2))
cormatr1[upper.tri(cormatr1)]<-""
cormatr1<-as.data.frame(cormatr1)
cormatr1
cormatr1 <- cor(round(QuantVar,2))
cormatr1
cor(round(QuantVar,2))
cormatr1 <- round(cor(Quantvar),2)
cormatr1 <- round(cor(QuantVar),2)
cormatr1[upper.tri(cormatr1)]<-""
cormatr1<-as.data.frame(cormatr1)
cormatr1
cormatr1 <- round(cor(QuantVar),3)
cormatr1[upper.tri(cormatr1)]<-""
cormatr1<-as.data.frame(cormatr1)
cormatr1
library(corrplot)
corrplot(cor(quantvar), type = "upper", method = "circle", tl.cex = 0.9)
corrplot(cor(QuantVar), type = "upper", method = "circle", tl.cex = 0.9)
cormatr1[abs(cormatr1) > 0.5]
cormatr1
cormatr1[abs(cormatr1) > 0.5]
cormatr1
cormatr1[abs(as.numeric(cormatr1)) > 0.5]
str(cormatr1)
cormatr1 <- round(cor(QuantVar),3)
cormatr1[abs(cormatr1) > .5]
cormatr1 <- round(cor(QuantVar),3)
cormatr1[upper.tri(cormatr1)]<-""
cormatr1<-as.data.frame(cormatr1)
cormatr1
corrplot(cor(QuantVar), type = "upper", method = "square", tl.cex = 0.9)
corrplot(cor(QuantVar), type = "upper", method = "circle", tl.cex = 0.9)
setwd("~/Desktop/My_Applications/Guide to Statistical Modeling using R")
# Installing required libraries
library(ggplot2) # Visualization package - built according to Edward Tufte's guidelines
library(gridExtra) # Required to attach plots together
options(digits=4)
# Loading data
dat <- read.csv('./data/Clean_Salaries.csv', header = TRUE)
#####----------- Regression Analysis -----------#####
# Correlation (picking quantitative variables only)
QuantVar <- dat[, c('Salary', 'Experience', 'Education', 'Employment', 'Assets', 'Age')]
cormatr1 <- round(cor(QuantVar),3)
cormatr1[upper.tri(cormatr1)]<-""
cormatr1<-as.data.frame(cormatr1)
cormatr1
library(corrplot) # For a more visually appealing correlation matrix
corrplot(cor(QuantVar), type = "upper", method = "circle", tl.cex = 0.9)
# I
model1 <- lm(Salary, data = dat)
head(dat)
model1 <- lm(Salary ~ . , data = dat)
summary(model1)
setwd("~/Desktop/My_Applications/Guide to Statistical Modeling using R")
# Installing required libraries
library(ggplot2) # Visualization package - built according to Edward Tufte's guidelines
library(gridExtra) # Required to attach plots together
options(digits=4)
# Loading data
dat <- read.csv('./data/Clean_Salaries.csv', header = TRUE)
dat <- dat[,!c('X', 'id')]
#####----------- Regression Analysis -----------#####
# Correlation (picking quantitative variables only)
QuantVar <- dat[, c('Salary', 'Experience', 'Education', 'Employment', 'Assets', 'Age')]
cormatr1 <- round(cor(QuantVar),3)
cormatr1[upper.tri(cormatr1)]<-""
cormatr1<-as.data.frame(cormatr1)
cormatr1
library(corrplot) # For a more visually appealing correlation matrix
corrplot(cor(QuantVar), type = "upper", method = "circle", tl.cex = 0.9)
# It would be a good idea to examinie the correlation between Experience~Age, Salary~Age, Salary~Experience
# Either the two latter are great predictors, or just mean the same thing (which seems unlikely)
# The correlation between Experience and Age shows that probably one of them should be excluded
# If you think about it, it makes sense older people to have more experience! No information gain from including both
# Linear Regression
model1 <- lm(Salary ~ . , data = dat)
summary(model1)
setwd("~/Desktop/My_Applications/Guide to Statistical Modeling using R")
# Installing required libraries
library(ggplot2) # Visualization package - built according to Edward Tufte's guidelines
library(gridExtra) # Required to attach plots together
options(digits=4)
# Loading data
dat <- read.csv('./data/Clean_Salaries.csv', header = TRUE)
dat <- dat[,!c('X', 'id')]
#####----------- Regression Analysis -----------#####
# Correlation (picking quantitative variables only)
QuantVar <- dat[, c('Salary', 'Experience', 'Education', 'Employment', 'Assets', 'Age')]
cormatr1 <- round(cor(QuantVar),3)
cormatr1[upper.tri(cormatr1)]<-""
cormatr1<-as.data.frame(cormatr1)
cormatr1
library(corrplot) # For a more visually appealing correlation matrix
corrplot(cor(QuantVar), type = "upper", method = "circle", tl.cex = 0.9)
# It would be a good idea to examinie the correlation between Experience~Age, Salary~Age, Salary~Experience
# Either the two latter are great predictors, or just mean the same thing (which seems unlikely)
# The correlation between Experience and Age shows that probably one of them should be excluded
# If you think about it, it makes sense older people to have more experience! No information gain from including both
# Linear Regression
model1 <- lm(Salary ~ . , data = dat)
summary(model1)
setwd("~/Desktop/My_Applications/Guide to Statistical Modeling using R")
# Installing required libraries
library(ggplot2) # Visualization package - built according to Edward Tufte's guidelines
library(gridExtra) # Required to attach plots together
options(digits=4)
# Loading data
dat <- read.csv('./data/Clean_Salaries.csv', header = TRUE)
dat <- dat[,-c('X', 'id')]
#####----------- Regression Analysis -----------#####
# Correlation (picking quantitative variables only)
QuantVar <- dat[, c('Salary', 'Experience', 'Education', 'Employment', 'Assets', 'Age')]
cormatr1 <- round(cor(QuantVar),3)
cormatr1[upper.tri(cormatr1)]<-""
cormatr1<-as.data.frame(cormatr1)
cormatr1
library(corrplot) # For a more visually appealing correlation matrix
corrplot(cor(QuantVar), type = "upper", method = "circle", tl.cex = 0.9)
# It would be a good idea to examinie the correlation between Experience~Age, Salary~Age, Salary~Experience
# Either the two latter are great predictors, or just mean the same thing (which seems unlikely)
# The correlation between Experience and Age shows that probably one of them should be excluded
# If you think about it, it makes sense older people to have more experience! No information gain from including both
# Linear Regression
model1 <- lm(Salary ~ . , data = dat)
summary(model1)
dat
dat <- dat[!c('X', 'id')]
dat
dat <- dat[-c('X', 'id')]
dat
dat <- dat[,!c('X', 'id')]
dat <- dat[, -c('X', 'id')]
dat <- dat[, c(-'X', -'id')]
dat <- dat[, c('X', 'id')]
dat <- !dat[, c('X', 'id')]
dat
# Loading data
dat <- read.csv('./data/Clean_Salaries.csv', header = TRUE)
dat <- !dat[, c('X', 'id')]
dat
# Loading data
dat <- read.csv('./data/Clean_Salaries.csv', header = TRUE)
dat <- dat[, -c('X', 'id')]
dat <- dat[,3:]
dat <- dat[,-c(1,2)]
head(dat)
setwd("~/Desktop/My_Applications/Guide to Statistical Modeling using R")
# Installing required libraries
library(ggplot2) # Visualization package - built according to Edward Tufte's guidelines
library(gridExtra) # Required to attach plots together
options(digits=4)
# Loading data
dat <- read.csv('./data/Clean_Salaries.csv', header = TRUE)
dat <- dat[,-c(1,2)]
#####----------- Regression Analysis -----------#####
# Correlation (picking quantitative variables only)
QuantVar <- dat[, c('Salary', 'Experience', 'Education', 'Employment', 'Assets', 'Age')]
cormatr1 <- round(cor(QuantVar),3)
cormatr1[upper.tri(cormatr1)]<-""
cormatr1<-as.data.frame(cormatr1)
cormatr1
library(corrplot) # For a more visually appealing correlation matrix
corrplot(cor(QuantVar), type = "upper", method = "circle", tl.cex = 0.9)
# It would be a good idea to examinie the correlation between Experience~Age, Salary~Age, Salary~Experience
# Either the two latter are great predictors, or just mean the same thing (which seems unlikely)
# The correlation between Experience and Age shows that probably one of them should be excluded
# If you think about it, it makes sense older people to have more experience! No information gain from including both
# Linear Regression
model1 <- lm(Salary ~ . , data = dat)
summary(model1)
model2 <- update(model1 ~. - Board - Age - International)
model2 <- update(model1, . ~ . - Board - Age - International)
summary(model2)
plot(model2)
par(mfrow = c(2,2))
plot(model2)
library(rpart)
library(rpart.plot)
tree1 <- rpart(Salary ~ . , data = dat)
rpart.plot(tree1, type = 5, shadow.col = 'grey')
par(mfrow = c(1,1))
tree1 <- rpart(Salary ~ . , data = dat)
rpart.plot(tree1, type = 5, shadow.col = 'grey')
rpart.plot(tree1, type = 5, shadow.col = 'grey', main = 'Salary Regression Tree')
setwd("~/Desktop/My_Applications/Guide to Statistical Modeling using R")
# Installing required libraries
library(ggplot2) # Visualization package - built according to Edward Tufte's guidelines
library(gridExtra) # Required to attach plots together
options(digits=4)
# Loading data
dat <- read.csv('./data/Clean_Salaries.csv', header = TRUE)
dat <- dat[,-c(1,2)]
#####----------- Regression Analysis -----------#####
# Correlation (picking quantitative variables only)
QuantVar <- dat[, c('Salary', 'Experience', 'Education', 'Employment', 'Assets', 'Age')]
cormatr1 <- round(cor(QuantVar),3)
cormatr1[upper.tri(cormatr1)]<-""
cormatr1<-as.data.frame(cormatr1)
cormatr1
library(corrplot) # For a more visually appealing correlation matrix
corrplot(cor(QuantVar), type = "upper", method = "circle", tl.cex = 0.9)
# It would be a good idea to examine the correlation between Experience~Age, Salary~Age, Salary~Experience
# Either the two latter are great predictors, or just mean the same thing (which seems unlikely)
# The correlation between Experience and Age shows that probably one of them should be excluded
# If you think about it, it makes sense older people to have more experience! No information gain from including both
# Linear Regression
model1 <- lm(Salary ~ . , data = dat)
summary(model1)
# Very high p-values for Board, Age and International
# Updating the model
model2 <- update(model1, . ~ . - Board - Age - International)
summary(model2)
# The coefficients are significant and the R-squared is more than 90% - The model fits the data pretty well
par(mfrow = c(2,2)) # Screen split to fit all-four plots
plot(model2)
# However, the residuals show some pattern and the qqplot is not clearly linear
# We should be careful about choosing a linear model for this one - Not saying that it's the wrong thing to do
#####----------- Regression Tree -----------#####
library(rpart)
library(rpart.plot)
par(mfrow = c(1,1)) # Reverse screen split
tree1 <- rpart(Salary ~ . , data = dat)
rpart.plot(tree1, type = 5, shadow.col = 'grey', main = 'Salary Regression Tree')
# Comparing the coefficients included in the tree and the linear model can give a more robust explanation about the significance of parameters
# Generally, if the linear model is a good fit it's always a good idea to choose it rather than the tree!
summary(model2)
ggplot(dat) +
geom_point(aes(y = Salary, x = experience))
ggplot(dat) +
geom_point(aes(y = Salary, x = Experience))
ggplot(dat) +
geom_point(aes(y = Salary, x = Experience), col = as.factor(bonus))
ggplot(dat) +
geom_point(aes(y = Salary, x = Experience), col = as.factor(Bonus))
head(dat) # View first 6 rows of the data
ggplot(dat) +
geom_point(aes(y = Salary, x = Experience), col = as.factor("Bonus"))
ggplot(dat, col = as.factor("Bonus")) +
geom_point(aes(y = Salary, x = Experience))
ggplot(dat, aes(y = Salary, x = Experience), col = as.factor("Bonus")) +
geom_point()
ggplot(dat, aes(y = Salary, x = Experience), col = as.factor(Bonus)) +
geom_point()
ggplot(dat, aes(y = Salary, x = Experience), col = Bonus) +
geom_point()
ggplot(dat, aes(y = Salary, x = Experience), color = Bonus) +
geom_point()
ggplot(dat, aes(y = Salary, x = Experience), color = as.factor(Bonus)) +
geom_point()
ggplot(dat, aes(y = Salary, x = Experience, color = as.factor(Bonus))) +
geom_point()
ggplot(dat, aes(y = Salary, x = Experience, color = as.factor(Bonus))) +
geom_point() +
geom_smooth(method = "lm") +
labs(colour='Bonus eligibility')
ggplot(dat, aes(y = Salary, x = Experience, color = as.factor(Bonus))) +
geom_point() +
geom_smooth(method = "lm") +
labs(colour='Bonus eligibility') +
ggtitle(Salary vs eExperience by bonus eligibility)
ggplot(dat, aes(y = Salary, x = Experience, color = as.factor(Bonus))) +
geom_point() +
geom_smooth(method = "lm") +
labs(colour='Bonus eligibility') +
ggtitle('Salary vs Experience by bonus eligibility')
